{"version":3,"sources":["Region/regionActions.ts","store.ts","Region/regionReducer.ts","Entity/entities.ts","Entity/EntityPicker.jsx","Region/regions.ts","helpers/array.ts","Region/regionSelectors.ts","Region/RegionPicker.jsx","Tag/tags.ts","Tag/TagPicker.jsx","Timeline/boundaries.ts","events/Event.ts","Timeline/Lanes.js","Timeline/RegionLabels.js","Timeline/colors.js","Timeline/ZoomedEvents.js","Timeline/drawGraph.js","Timeline/ZoomArea.js","Timeline/OverviewArea.js","Timeline/Brush.js","Timeline/Timeline.tsx","Timeline/VisibleEvents.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["actionCreator","actionCreatorFactory","selectRegion","unSelectRegion","reducers","combineReducers","selectedRegions","state","action","isType","payload","region","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","entities","EntitySelector","props","options","map","tag","value","disabled","isExpanded","isPlain","selected","onToggle","setState","onSelect","event","selection","includes","prevState","item","console","log","clearSelection","this","titleId","id","hidden","Select","variant","SelectVariant","typeaheadMulti","ariaLabelTypeAhead","onClear","selections","ariaLabelledBy","placeholderText","option","index","SelectOption","isDisabled","key","React","Component","countEventsByRegions","events","results","forEach","regions","Object","entries","count","push","getRegionsWithEvents","threshold","regionsWithEvents","dataset","isEmpty","array","length","getSelectedRegions","defaultRegions","RegionPicker","connector","connect","dispatch","tags","TagPicker","FIRST_CASE","DateTime","fromISO","END_OF_2020","PANDEMY_DURATION","now","fromSeconds","Date","end","Math","min","toSeconds","diff","pandemyDuration","MAP_DATA_TO_GRAPH","as","addLane","lane","addD3Metadata","indexOf","addStartAndEnd","published_date","start","start_at","end_at","max","round","projectToGraph","plus","days","addLanes","context","data","margin","width","positionAt","append","selectAll","enter","attr","d","insert","right","i","addRegionLabels","lanes","classes","text","colors","blue","cyan","gold","green","orange","purple","red","black","names","colorize","keys","color","shade","floor","title","toLocaleString","DATE_MED","date","drawZoomedEvents","zoomArea","visibleEvents","xStartPoint","yStartPoint","selectionStart","xEvent","y","zoomedEvents","url","xLink","exit","remove","drawGraph","element","graphWidth","current","offsetWidth","top","bottom","left","graphHeight","height","zoomAreaHeight","overviewAreaHeight","x","d3","domain","range","yEndPoint","svg","style","chartProps","drawZoomArea","overviewArea","drawOverviewArea","brushed","invert","selectionEnd","drawBrush","brush","extent","on","call","Timeline","graph","useRef","useEffect","ref","data-testid","sortByRegion","a","b","timelineEvents","eventWithMetadata","buildD3Data","sort","App","className","Flex","breakpointMods","modifier","FlexModifiers","breakpoint","FlexBreakpoints","lg","column","FlexItem","VisibleEvents","EntityPicker","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ae8d3f6b.chunk.js","sourcesContent":["import { Region } from '../types/region'\nimport actionCreatorFactory from 'typescript-fsa'\n\nconst actionCreator = actionCreatorFactory()\n\nconst SET_REGION_FILTER = 'SET_REGION_FILTER'\nconst SELECT_REGION = 'SELECT_REGION'\nconst UNSELECT_REGION = 'UNSELECT_REGION'\n\nconst selectRegion = actionCreator<{ region: Region }>(SELECT_REGION)\nconst unSelectRegion = actionCreator<{ region: Region }>(UNSELECT_REGION)\n\nexport {\n  SET_REGION_FILTER,\n  SELECT_REGION,\n  UNSELECT_REGION,\n  selectRegion,\n  unSelectRegion,\n}\n","import { combineReducers, compose, createStore } from 'redux'\nimport { selectedRegions } from './Region/regionReducer'\n\nexport const reducers = combineReducers({\n  selectedRegions,\n})\nconst initialState = {}\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducers, initialState, composeEnhancers())\n\nexport default store\n","import { Action } from 'redux'\nimport { isType } from 'typescript-fsa'\nimport { Regions } from '../types/region'\nimport { selectRegion, unSelectRegion } from './regionActions'\n\nexport function selectedRegions(state: Regions = [], action: Action) {\n  if (isType(action, selectRegion)) {\n    return [...state, action.payload.region]\n  }\n\n  if (isType(action, unSelectRegion)) {\n    return [\n      ...state.filter((region: string) => region !== action.payload.region),\n    ]\n  }\n\n  return state\n}\n","export const entities = [\n    \"government\", // Government statement | e.g. Europe, French government, local state or their representative\n    \"health-organization\", // e.g. WHO, CDC, ECDC (Europe), CCDC (China), National health organization\n    \"academic\", // e.g. University, research lab, etc.\n    \"company\", // Company representative | e.g. Dyson, Google, etc.\n    \"individual\", // private individual | e.g. Dr. XYZ\n    \"newspaper\", // investigation by newspapers BBC, LeMonde, Washington Post\n    \"international-organization\" // IMF, World Bank, WTO, etc.\n  ] as const;\n  ","import React from \"react\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\nimport { entities } from \"./entities\";\n\nclass EntitySelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = entities.map(tag => ({\n      value: tag,\n      disabled: false\n    }));\n\n    this.state = {\n      isExpanded: false,\n      isPlain: true,\n      selected: []\n    };\n\n    this.onToggle = isExpanded => {\n      this.setState({\n        isExpanded\n      });\n    };\n\n    this.onSelect = (event, selection) => {\n      const { selected } = this.state;\n      if (selected.includes(selection)) {\n        this.setState(\n          prevState => ({\n            selected: prevState.selected.filter(item => item !== selection)\n          }),\n          () => console.log(\"selections: \", this.state.selected)\n        );\n      } else {\n        this.setState(\n          prevState => ({ selected: [...prevState.selected, selection] }),\n          () => console.log(\"selections: \", this.state.selected)\n        );\n      }\n    };\n\n    this.clearSelection = () => {\n      this.setState({\n        selected: [],\n        isExpanded: false\n      });\n    };\n  }\n\n  render() {\n    const { isExpanded, isPlain, selected } = this.state;\n    const titleId = \"plain-typeahead-select-id\";\n\n    return (\n      <div>\n        <span id={titleId} hidden>\n          Filter using one or multiple entities\n        </span>\n        <Select\n          variant={SelectVariant.typeaheadMulti}\n          ariaLabelTypeAhead=\"Filter using one or multiple entities\"\n          onToggle={this.onToggle}\n          onSelect={this.onSelect}\n          onClear={this.clearSelection}\n          selections={selected}\n          isExpanded={isExpanded}\n          isPlain={isPlain}\n          ariaLabelledBy={titleId}\n          placeholderText=\"Filter using one or multiple entities\"\n        >\n          {this.options.map((option, index) => (\n            <SelectOption\n              isDisabled={option.disabled}\n              key={index}\n              value={option.value}\n            />\n          ))}\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default EntitySelector;\n","import dataset from '../data/events.json'\nimport { Events } from '../types/event'\nimport { Region } from '../types/region'\n\nexport const regions = [\n  // Regional blocks\n  'Europe',\n  'Asia',\n  'Africa',\n  'North America',\n  'South America',\n  'World',\n  // Nations\n  'Afghanistan',\n  'Albania',\n  'Algeria',\n  'Andorra',\n  'Angola',\n  'Antigua and Barbuda',\n  'Argentina',\n  'Armenia',\n  'Australia',\n  'Austria',\n  'Azerbaijan',\n  'Bahamas',\n  'Bahrain',\n  'Bangladesh',\n  'Barbados',\n  'Belarus',\n  'Belgium',\n  'Belize',\n  'Benin',\n  'Bhutan',\n  'Bolivia',\n  'Bosnia and Herzegovina',\n  'Botswana',\n  'Brazil',\n  'Brunei',\n  'Bulgaria',\n  'Burkina Faso',\n  'Burma',\n  'Burundi',\n  'Cabo Verde',\n  'Cambodia',\n  'Cameroon',\n  'Canada',\n  'Central African Republic',\n  'Chad',\n  'Chile',\n  'China',\n  'Colombia',\n  'Congo (Brazzaville)',\n  'Congo (Kinshasa)',\n  'Costa Rica',\n  \"Cote d'Ivoire\",\n  'Croatia',\n  'Cuba',\n  'Cyprus',\n  'Czechia',\n  'Denmark',\n  'Diamond Princess',\n  'Djibouti',\n  'Dominica',\n  'Dominican Republic',\n  'Ecuador',\n  'Egypt',\n  'El Salvador',\n  'Equatorial Guinea',\n  'Eritrea',\n  'Estonia',\n  'Eswatini',\n  'Ethiopia',\n  'Fiji',\n  'Finland',\n  'France',\n  'Gabon',\n  'Gambia',\n  'Georgia',\n  'Germany',\n  'Ghana',\n  'Greece',\n  'Grenada',\n  'Guatemala',\n  'Guinea',\n  'Guinea-Bissau',\n  'Guyana',\n  'Haiti',\n  'Holy See',\n  'Honduras',\n  'Hungary',\n  'Iceland',\n  'India',\n  'Indonesia',\n  'Iran',\n  'Iraq',\n  'Ireland',\n  'Israel',\n  'Italy',\n  'Jamaica',\n  'Japan',\n  'Jordan',\n  'Kazakhstan',\n  'Kenya',\n  'Korea South',\n  'Kosovo',\n  'Kuwait',\n  'Kyrgyzstan',\n  'Laos',\n  'Latvia',\n  'Lebanon',\n  'Liberia',\n  'Libya',\n  'Liechtenstein',\n  'Lithuania',\n  'Luxembourg',\n  'MS Zaandam',\n  'Madagascar',\n  'Malawi',\n  'Malaysia',\n  'Maldives',\n  'Mali',\n  'Malta',\n  'Mauritania',\n  'Mauritius',\n  'Mexico',\n  'Moldova',\n  'Monaco',\n  'Mongolia',\n  'Montenegro',\n  'Morocco',\n  'Mozambique',\n  'Namibia',\n  'Nepal',\n  'Netherlands',\n  'New Zealand',\n  'Nicaragua',\n  'Niger',\n  'Nigeria',\n  'North Macedonia',\n  'Norway',\n  'Oman',\n  'Pakistan',\n  'Panama',\n  'Papua New Guinea',\n  'Paraguay',\n  'Peru',\n  'Philippines',\n  'Poland',\n  'Portugal',\n  'Qatar',\n  'Romania',\n  'Russia',\n  'Rwanda',\n  'Saint Kitts and Nevis',\n  'Saint Lucia',\n  'Saint Vincent and the Grenadines',\n  'San Marino',\n  'Sao Tome and Principe',\n  'Saudi Arabia',\n  'Senegal',\n  'Serbia',\n  'Seychelles',\n  'Sierra Leone',\n  'Singapore',\n  'Slovakia',\n  'Slovenia',\n  'Somalia',\n  'South Africa',\n  'South Sudan',\n  'Spain',\n  'Sri Lanka',\n  'Sudan',\n  'Suriname',\n  'Sweden',\n  'Switzerland',\n  'Syria',\n  'Taiwan',\n  'Tanzania',\n  'Thailand',\n  'Timor-Leste',\n  'Togo',\n  'Trinidad and Tobago',\n  'Tunisia',\n  'Turkey',\n  'USA',\n  'Uganda',\n  'Ukraine',\n  'United Arab Emirates',\n  'United Kingdom',\n  'Uruguay',\n  'Uzbekistan',\n  'Venezuela',\n  'Vietnam',\n  'West Bank and Gaza',\n  'Western Sahara',\n  'Zambia',\n  'Zimbabwe',\n] as const\n\nexport const countEventsByRegions = (events: Events) => {\n  type regionCount = { [k: string]: any }\n  const results: regionCount = {}\n\n  events.forEach((event) => {\n    results[event.region] = (results[event.region] || 0) + 1\n  })\n\n  type Stat = { region: Region; count: number }\n  const regions: Array<Stat> = []\n  Object.entries(results).forEach(([region, count]) =>\n    regions.push({ region, count } as Stat)\n  )\n\n  return regions\n}\n\nexport const MIN_EVENTS_FOR_REGION_VISIBILITY = 3\n\nexport const getRegionsWithEvents = (\n  events: Events,\n  threshold = MIN_EVENTS_FOR_REGION_VISIBILITY\n) =>\n  countEventsByRegions(events)\n    .filter((region) => region.count >= threshold)\n    .map((item) => item.region)\n\nexport const regionsWithEvents = getRegionsWithEvents(dataset as Events)\n","export const EMPTY = 0\n\nexport const isEmpty = (array: any[]) =>\n  typeof array !== 'undefined' && 'length' in array && array.length === EMPTY\n    ? true\n    : false\n","import { Regions } from '../types/region'\nimport { regionsWithEvents } from './regions'\nimport { isEmpty } from '../helpers/array'\n\nexport interface RootState {\n  selectedRegions: Regions\n}\n\nexport const getSelectedRegions = (\n  state: RootState,\n  defaultRegions: Regions = regionsWithEvents\n) => (isEmpty(state.selectedRegions) ? defaultRegions : state.selectedRegions)\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { selectRegion, unSelectRegion } from '../Region/regionActions'\nimport { getSelectedRegions } from '../Region/regionSelectors'\nimport { regionsWithEvents } from './regions'\n\nclass RegionPicker extends Component {\n  constructor(props) {\n    super(props)\n    this.options = regionsWithEvents.map((region) => ({\n      value: region,\n      disabled: false,\n    }))\n\n    this.state = {\n      isExpanded: false,\n      isPlain: true,\n      selected: [],\n    }\n\n    this.onToggle = (isExpanded) => {\n      this.setState({\n        isExpanded,\n      })\n    }\n\n    this.onSelect = (event, selection) => {\n      const { selected } = this.state\n\n      if (selected.includes(selection)) {\n        this.setState(\n          (prevState) => ({\n            selected: prevState.selected.filter((item) => item !== selection),\n          }),\n          () => console.log('selections: ', this.state.selected)\n        )\n      } else {\n        const { selectRegion } = this.props\n        selectRegion({ region: selection })\n\n        this.setState(\n          (prevState) => ({ selected: [...prevState.selected, selection] }),\n          () => console.log('selections: ', this.state.selected)\n        )\n      }\n    }\n\n    this.clearSelection = () => {\n      this.setState({\n        selected: [],\n        isExpanded: false,\n      })\n    }\n  }\n\n  render() {\n    const { isExpanded, isPlain, selected } = this.state\n    const titleId = 'plain-typeahead-select-id'\n\n    return (\n      <div>\n        <span id={titleId} hidden>\n          Select one or multiple areas\n        </span>\n        <Select\n          variant={SelectVariant.typeaheadMulti}\n          ariaLabelTypeAhead='Select one or multiple areas'\n          onToggle={this.onToggle}\n          onSelect={this.onSelect}\n          onClear={this.clearSelection}\n          selections={selected}\n          isExpanded={isExpanded}\n          isPlain={isPlain}\n          ariaLabelledBy={titleId}\n          placeholderText='Select one or multiple areas'\n        >\n          {this.options.map((option, index) => (\n            <SelectOption\n              isDisabled={option.disabled}\n              key={index}\n              value={option.value}\n            />\n          ))}\n        </Select>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  regions: getSelectedRegions(state),\n})\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    selectRegion: (region) => dispatch(selectRegion(region)),\n    unSelectRegion: (region) => dispatch(unSelectRegion(region)),\n  }\n}\nconst connector = connect(mapStateToProps, mapDispatchToProps)\n\nexport default connector(RegionPicker)\n","export const tags = [\n    \"announcement\", // statement to the public\n    \"aviation\", // aviation travel, industry\n    \"bed\", // providing new beds\n    \"bail-out\", // financial bail-out of individual/companies by government\n    \"behavior\", // social behavior in reaction to announcement or not\n    \"comparison\", // with other region that were hit before\n    \"copyright\", // infringement, lock, removal, etc.\n    \"dataviz\", // dataviz explanation\n    \"democracy\", // democratic and political life\n    \"distribution\", // distributing equipments to professional\n    \"DIY\", // 3D printing and other do-it yourself contribution\n    \"drug\", // drug use and scarcity\n    \"economy\", // impact, mitigation strategy, etc.\n    \"easing\", // restriction or lockdown easing\n    \"food\", // exportation/famine\n    \"first-case\", // first detected case in a region\n    \"futurology\", // projection of the evolution\n    \"hand-sanitizer\", // shortage, shipping, etc.\n    \"health-care\", // health care system\n    \"mask\", // FFP2\n    \"order\", // order equipment\n    \"pledge\", // company or individual announcing help (supposedly free)\n    \"respirator\", // respirator devices/parts, etc.\n    \"restriction\", // restriction of liberty/actions/services\n    \"rule-change\", // change of existing rule or law\n    \"shipping\", // shipping equipment\n    \"shortage\", // mask, protection (PPE), sanitizer, etc. shortage\n    \"stay-at-home\", // movement restriction\n    \"testing\", // availability, testing strategy, etc.\n    \"treatment\", // announcing a possible cure\n    \"triage\", // announcing triage strategy among patient\n    \"turnaround\", // policies turnaround or u-turn\n    \"virus\", // data about the virus itself\n  ] as const;","import { tags } from \"./tags\";\n\nimport React from \"react\";\nimport { Select, SelectOption, SelectVariant } from \"@patternfly/react-core\";\n\nclass TagPicker extends React.Component {\n  constructor(props) {\n    super(props);\n    this.options = tags.map(tag => ({\n      value: tag,\n      disabled: false\n    }));\n\n    this.state = {\n      isExpanded: false,\n      isPlain: true,\n      selected: []\n    };\n\n    this.onToggle = isExpanded => {\n      this.setState({\n        isExpanded\n      });\n    };\n\n    this.onSelect = (event, selection) => {\n      const { selected } = this.state;\n      if (selected.includes(selection)) {\n        this.setState(\n          prevState => ({\n            selected: prevState.selected.filter(item => item !== selection)\n          }),\n          () => console.log(\"selections: \", this.state.selected)\n        );\n      } else {\n        this.setState(\n          prevState => ({ selected: [...prevState.selected, selection] }),\n          () => console.log(\"selections: \", this.state.selected)\n        );\n      }\n    };\n\n    this.clearSelection = () => {\n      this.setState({\n        selected: [],\n        isExpanded: false\n      });\n    };\n  }\n\n  render() {\n    const { isExpanded, isPlain, selected } = this.state;\n    const titleId = \"plain-typeahead-select-id\";\n\n    return (\n      <div>\n        <span id={titleId} hidden>\n          Filter using one or multiple tags\n        </span>\n        <Select\n          variant={SelectVariant.typeaheadMulti}\n          ariaLabelTypeAhead=\"Filter using one or multiple tags\"\n          onToggle={this.onToggle}\n          onSelect={this.onSelect}\n          onClear={this.clearSelection}\n          selections={selected}\n          isExpanded={isExpanded}\n          isPlain={isPlain}\n          ariaLabelledBy={titleId}\n          placeholderText=\"Filter using one or multiple tags\"\n        >\n          {this.options.map((option, index) => (\n            <SelectOption\n              isDisabled={option.disabled}\n              key={index}\n              value={option.value}\n            />\n          ))}\n        </Select>\n      </div>\n    );\n  }\n}\n\nexport default TagPicker;\n","import { DateTime } from 'luxon'\n\nconst pandemyDuration = (now: DateTime = DateTime.fromSeconds(Date.now())) => {\n  const end = DateTime.fromSeconds(\n    Math.min(now.toSeconds(), END_OF_2020.toSeconds())\n  )\n  // const end = now\n  return end.diff(FIRST_CASE)\n}\n\nconst FIRST_CASE = DateTime.fromISO('2019-11-17T00:00:00+00:00') // 17 November 2019 https://www.theguardian.com/world/2020/mar/13/first-covid-19-case-happened-in-november-china-government-records-show-report\nconst END_OF_2020 = DateTime.fromISO('2020-12-31T23:59:59+00:00')\nconst PANDEMY_DURATION = pandemyDuration()\nconst GRAPH_WIDTH = 2000 // pixels\nconst MAP_DATA_TO_GRAPH = PANDEMY_DURATION.as('seconds') / GRAPH_WIDTH\nconst MIN_ITEM_WIDTH = 5 // pixels\nconst GRAPH_BEGIN = 0\n\nconst projectToGraph = (start: DateTime, end: DateTime) => {\n  const start_at = start.diff(FIRST_CASE).as('seconds') / MAP_DATA_TO_GRAPH\n  const end_at = Math.max(\n    end.diff(FIRST_CASE).as('seconds') / MAP_DATA_TO_GRAPH,\n    start_at + MIN_ITEM_WIDTH\n  )\n\n  return {\n    start: Math.round(start_at),\n    end: Math.round(end_at),\n  }\n}\n\nexport {\n  END_OF_2020,\n  FIRST_CASE,\n  GRAPH_BEGIN,\n  GRAPH_WIDTH,\n  MAP_DATA_TO_GRAPH,\n  MIN_ITEM_WIDTH,\n  pandemyDuration,\n  projectToGraph,\n}\n","import { DateTime } from 'luxon'\nimport { regionsWithEvents } from '../Region/regions'\nimport { projectToGraph } from '../Timeline/boundaries'\nimport { Event, Events } from '../types/event'\nimport { Regions } from '../types/region'\nimport { TimelineEvent, TimelineEvents } from '../types/timelineEvent'\n\nconst buildD3Data = (dataset: Events): TimelineEvents => {\n  const data: TimelineEvents = []\n\n  dataset.forEach((event) => {\n    const eventWithMetadata = addD3Metadata(event)\n    data.push(eventWithMetadata)\n  })\n\n  return data\n}\n\nconst addLane = (event: Event, lane: number): TimelineEvent =>\n  ({ ...event, lane } as TimelineEvent)\n\nconst addD3Metadata = (\n  event: Event,\n  regions: Regions = regionsWithEvents\n): TimelineEvent => {\n  const lane = regions.indexOf(event.region)\n\n  return addLane(addStartAndEnd(event), lane)\n}\n\nconst addStartAndEnd = (event: Event) => {\n  const published_date = DateTime.fromISO(event.published_date)\n  const { start, end } = projectToGraph(\n    published_date,\n    published_date.plus({ days: 1 })\n  )\n\n  return {\n    ...event,\n    start,\n    end,\n  }\n}\n\nconst getEvents = (events: TimelineEvents, regions: Regions) =>\n  events.filter((event) => regions.includes(event.region))\n\nexport {\n  buildD3Data,\n  addLane,\n  addD3Metadata,\n  addStartAndEnd,\n  getEvents,\n}\n","import { getRegionsWithEvents } from '../Region/regions'\n\nexport const addLanes = (context, data, { margin, width, positionAt }) =>\n  context\n    .append('g')\n    .selectAll('.region-lane')\n    .data(getRegionsWithEvents(data))\n    .enter()\n    .append('g')\n    .attr('class', (d) => `region-lane region-${d}`)\n    .insert('rect')\n    .attr('x', margin.right)\n    .attr('y', (d, i) => positionAt(i))\n    .attr('width', width)\n    .attr('height', (d, i) => positionAt(i + 1))\n    .attr('class', 'event-lane')\n","const region = (d) => d\n\nconst SPACE_AFTER_LABEL = 5\n\nconst addRegionLabels = (context, lanes, { margin, positionAt, classes }) =>\n  context\n    .append('g')\n    .selectAll('.region-name')\n    .data(lanes)\n    .enter()\n    .append('text')\n    .text((d) => region(d))\n    .attr('x', -(margin.right + SPACE_AFTER_LABEL))\n    .attr('y', (d, i) => positionAt(i + 0.5))\n    .attr('dy', '.5ex')\n    .attr('text-anchor', 'end')\n    .attr('x-region', (d, i) => region(d, i))\n    .attr('class', `region-name ${[...classes]}`)\n\nexport { region, addRegionLabels }\n","const colors = {\n  blue: [\n    '--pf-global--palette--blue-100',\n    '--pf-global--palette--blue-200',\n    '--pf-global--palette--blue-300',\n    '--pf-global--palette--blue-400',\n    '--pf-global--palette--blue-500',\n    '--pf-global--palette--blue-600',\n    '--pf-global--palette--blue-700',\n  ],\n  cyan: [\n    '--pf-global--palette--cyan-100',\n    '--pf-global--palette--cyan-200',\n    '--pf-global--palette--cyan-300',\n    '--pf-global--palette--cyan-400',\n    '--pf-global--palette--cyan-500',\n    '--pf-global--palette--cyan-600',\n    '--pf-global--palette--cyan-700',\n  ],\n  gold: [\n    '--pf-global--palette--gold-100',\n    '--pf-global--palette--gold-200',\n    '--pf-global--palette--gold-300',\n    '--pf-global--palette--gold-400',\n    '--pf-global--palette--gold-500',\n    '--pf-global--palette--gold-600',\n    '--pf-global--palette--gold-700',\n  ],\n  green: [\n    '--pf-global--palette--green-100',\n    '--pf-global--palette--green-200',\n    '--pf-global--palette--green-300',\n    '--pf-global--palette--green-400',\n    '--pf-global--palette--green-500',\n    '--pf-global--palette--green-600',\n    '--pf-global--palette--green-700',\n  ],\n  'light-blue': [\n    '--pf-global--palette--light-blue-100',\n    '--pf-global--palette--light-blue-200',\n    '--pf-global--palette--light-blue-300',\n    '--pf-global--palette--light-blue-400',\n    '--pf-global--palette--light-blue-500',\n    '--pf-global--palette--light-blue-600',\n    '--pf-global--palette--light-blue-700',\n  ],\n  'light-green': [\n    '--pf-global--palette--light-green-100',\n    '--pf-global--palette--light-green-200',\n    '--pf-global--palette--light-green-300',\n    '--pf-global--palette--light-green-400',\n    '--pf-global--palette--light-green-500',\n    '--pf-global--palette--light-green-600',\n    '--pf-global--palette--light-green-700',\n  ],\n  orange: [\n    '--pf-global--palette--orange-100',\n    '--pf-global--palette--orange-200',\n    '--pf-global--palette--orange-300',\n    '--pf-global--palette--orange-400',\n    '--pf-global--palette--orange-500',\n    '--pf-global--palette--orange-600',\n    '--pf-global--palette--orange-700',\n  ],\n  purple: [\n    '--pf-global--palette--purple-100',\n    '--pf-global--palette--purple-200',\n    '--pf-global--palette--purple-300',\n    '--pf-global--palette--purple-400',\n    '--pf-global--palette--purple-500',\n    '--pf-global--palette--purple-600',\n    '--pf-global--palette--purple-700',\n  ],\n  red: [\n    '--pf-global--palette--red-100',\n    '--pf-global--palette--red-200',\n    '--pf-global--palette--red-300',\n    '--pf-global--palette--red-400',\n    '--pf-global--palette--red-500',\n  ],\n  black: [\n    '--pf-global--palette--black-100',\n    '--pf-global--palette--black-200',\n    '--pf-global--palette--black-300',\n    '--pf-global--palette--black-400',\n    '--pf-global--palette--black-500',\n    '--pf-global--palette--black-600',\n    '--pf-global--palette--black-700',\n    '--pf-global--palette--black-800',\n    '--pf-global--palette--black-900',\n    '--pf-global--palette--black-1000',\n  ],\n}\nconst names = [\n  'blue',\n  'cyan',\n  'gold',\n  'green',\n  'light-blue',\n  'light-green',\n  'orange',\n  'purple',\n  'red',\n  'black',\n]\n\nconst colorize = (index) => {\n  const length = Object.keys(colors).length\n  const color = index % length\n  const shade = Math.floor(index / length)\n\n  return `fill: var(${colors[names[color]][shade]})`\n}\nexport { colors, colorize }\n","import { DateTime } from 'luxon'\nimport { colorize } from './colors'\n\nconst date = (d) => {\n  return DateTime.fromISO(d.published_date).toLocaleString(DateTime.DATE_MED)\n}\n\nconst title = (d) => `${d.title} [${date(d)}]`\n\nexport const drawZoomedEvents = (\n  zoomArea,\n  visibleEvents,\n  { xStartPoint, yStartPoint, selectionStart }\n) => {\n  const xEvent = (d) => xStartPoint(Math.max(d.start, selectionStart))\n  const y = (d) => yStartPoint(d.lane)\n  const xLink = (d) => xStartPoint(Math.max(d.start, selectionStart))\n  const width = (d) => xStartPoint(d.end) - xStartPoint(d.start)\n\n  const zoomedEvents = zoomArea\n    .selectAll('.zoomed-event')\n    .data(visibleEvents, (d) => d)\n    .attr('transform', (d) => `translate(${xEvent(d)},${y(d)})`)\n    .enter()\n    .append('g')\n    .attr('class', 'zoomed-event')\n    .attr('transform', (d) => `translate(${xEvent(d)},${y(d)})`)\n\n  // eslint-disable-next-line no-unused-vars\n  const rects = zoomedEvents\n    .insert('rect')\n    .attr('width', (d) => width(d))\n    .attr('height', (d) => yStartPoint(1))\n    .attr('style', (d) => colorize(d.lane))\n\n  // eslint-disable-next-line no-unused-vars\n  const links = zoomedEvents\n    .insert('a')\n    .attr('xlink:href', (d) => d.url)\n    .attr('target', '_blank')\n    .attr('transform', (d) => `translate(${xLink(d)}, 0)`)\n    .append('text')\n    .text((d) => title(d))\n    .attr('transform', 'translate(2,12)')\n    .attr('class', 'event-label')\n    .attr('text-anchor', 'start')\n\n  zoomedEvents.exit().remove()\n\n  return zoomedEvents\n}\n","import * as d3 from 'd3'\nimport { GRAPH_BEGIN, GRAPH_WIDTH } from './boundaries'\nimport { drawZoomArea } from './ZoomArea'\nimport { drawOverviewArea } from './OverviewArea'\nimport { drawBrush } from './Brush'\n\nconst drawGraph = (element, lanes, data) => {\n  const timeBegin = GRAPH_BEGIN\n  const timeEnd = GRAPH_WIDTH\n\n  const graphWidth = element.current.offsetWidth\n\n  const margin = {\n    top: 20,\n    right: 0,\n    bottom: 15,\n    left: 150,\n  }\n  const width = graphWidth - margin.left - margin.right\n  const graphHeight = 60 * lanes.length\n  const height = graphHeight - margin.top - margin.bottom\n\n  const zoomAreaHeight = height * 0.8\n  const overviewAreaHeight = height * 0.2\n\n  const x = d3.scaleLinear().domain([timeBegin, timeEnd]).range([0, width])\n\n  const xStartPoint = d3.scaleLinear().range([0, width])\n\n  const yStartPoint = d3\n    .scaleLinear()\n    .domain([0, lanes.length])\n    .range([0, zoomAreaHeight])\n\n  const yEndPoint = d3\n    .scaleLinear()\n    .domain([0, lanes.length])\n    .range([0, overviewAreaHeight])\n\n  const svg = d3\n    .select(element.current)\n    .append('svg')\n    .attr('class', 'chart')\n    .attr('viewBox', [0, 0, graphWidth, graphHeight])\n    .style('display', 'block')\n\n  const chartProps = {\n    graphHeight,\n    graphWidth,\n    height,\n    zoomAreaHeight,\n    margin,\n    overviewAreaHeight,\n    svg,\n    width,\n  }\n\n  svg\n    .append('defs')\n    .append('clipPath')\n    .attr('id', 'clip')\n    .append('rect')\n    .attr('width', width)\n    .attr('height', zoomAreaHeight)\n\n  const zoomArea = drawZoomArea(data, { ...chartProps, yStartPoint }, lanes)\n  const overviewArea = drawOverviewArea(\n    data,\n    { ...chartProps, x, yEndPoint },\n    lanes\n  )\n  const brushed = () =>\n    drawBrush(data, { x, xStartPoint, yStartPoint }, zoomArea)\n  //brush\n  const brush = d3\n    .brushX()\n    .extent([\n      [0, 0],\n      [width, overviewAreaHeight],\n    ])\n    .on('brush', brushed)\n\n  overviewArea\n    .append('g')\n    .attr('class', 'x brush')\n    .call(brush)\n    .selectAll('rect')\n    .attr('y', 1)\n    .attr('height', overviewAreaHeight - 1)\n\n  brushed()\n}\n\nexport default drawGraph\n","import { addLanes } from './Lanes'\nimport { addRegionLabels } from './RegionLabels.js'\n\nconst drawZoomArea = (\n  data,\n  { svg, margin, width, zoomAreaHeight, yStartPoint },\n  lanes\n) => {\n  const zoomArea = svg\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n    .attr('width', width)\n    .attr('height', zoomAreaHeight)\n    .attr('class', 'zoomArea')\n\n  //zoomArea lanes and texts\n  addLanes(zoomArea, data, { margin, width, positionAt: yStartPoint })\n  addRegionLabels(zoomArea, lanes, {\n    margin,\n    positionAt: yStartPoint,\n    classes: ['pf-c-title'],\n  })\n\n  return zoomArea.append('g').attr('clip-path', 'url(#clip)')\n}\n\nexport { drawZoomArea }\n","import { colorize } from './colors'\nimport { addLanes } from './Lanes'\nimport { addRegionLabels } from './RegionLabels.js'\n\nexport const drawOverviewArea = (\n  data,\n  { svg, margin, width, zoomAreaHeight, overviewAreaHeight, x, yEndPoint },\n  lanes\n) => {\n  const overviewArea = svg\n    .append('g')\n    .attr(\n      'transform',\n      'translate(' + margin.left + ',' + (zoomAreaHeight + margin.top) + ')'\n    )\n    .attr('width', width)\n    .attr('height', overviewAreaHeight)\n    .attr('class', 'overviewArea')\n\n  //mini lanes and texts\n  addLanes(overviewArea, data, { margin, width, positionAt: yEndPoint })\n  addRegionLabels(overviewArea, lanes, {\n    margin,\n    positionAt: yEndPoint,\n    classes: ['pf-c-chip__text'],\n  })\n\n  //mini event rects\n  overviewArea\n    .append('g')\n    .selectAll('.overview-event')\n    .data(data)\n    .enter()\n    .append('rect')\n    .attr('class', 'overview-event')\n    .attr('x', (d) => x(d.start))\n    .attr('y', (d) => yEndPoint(d.lane + 0.5) - 5)\n    .attr('width', (d) => x(d.end - d.start))\n    .attr('height', 10)\n    .attr('style', (d) => colorize(d.lane))\n\n  return overviewArea\n}\n","import * as d3 from 'd3'\nimport { drawZoomedEvents } from './ZoomedEvents'\n\nconst drawBrush = (data, { x, xStartPoint, yStartPoint }, zoomArea) => {\n  const selection = d3.event && d3.event.selection\n  if (!selection) return\n  let [selectionStart, selectionEnd] = selection.map(x.invert)\n  let visibleEvents = data.filter(\n    (event) => event.end > selectionStart && event.start < selectionEnd\n  )\n\n  xStartPoint.domain([selectionStart, selectionEnd])\n\n  drawZoomedEvents(zoomArea, visibleEvents, {\n    xStartPoint,\n    yStartPoint,\n    selectionStart,\n  })\n}\n\nexport { drawBrush }\n","import React, { useEffect, useRef } from 'react'\nimport { Regions } from '../types/region'\nimport { TimelineEvents } from '../types/timelineEvent'\nimport drawGraph from './drawGraph'\nimport './Timeline.css'\n\ninterface TimelineProps {\n  events: TimelineEvents\n  regions: Regions\n}\nconst Timeline = ({ events, regions }: TimelineProps) => {\n  const graph = useRef(null)\n\n  useEffect(() => drawGraph(graph, regions, events), [graph, regions, events])\n\n  return <div ref={graph} data-testid='chart'></div>\n}\n\nexport default Timeline\n","import { connect } from 'react-redux'\nimport data from '../data/events.json'\nimport { buildD3Data, getEvents } from '../events/Event'\nimport { regionsWithEvents } from '../Region/regions'\nimport { getSelectedRegions, RootState } from '../Region/regionSelectors'\nimport { Event } from '../types/event'\nimport { Regions } from '../types/region'\nimport { TimelineEvents } from '../types/timelineEvent'\nimport Timeline from './Timeline'\n\nconst sortByRegion = (a: Event, b: Event) => {\n  if (a.region > b.region) {\n    return 1\n  }\n  if (a.region < b.region) {\n    return -1\n  }\n  return 0\n}\n\nconst timelineEvents = buildD3Data(data as TimelineEvents)\n\nconst getVisibleEvents = (events: TimelineEvents, regions: Regions) => {\n  const visibileEvents = getEvents(\n    timelineEvents.sort(sortByRegion),\n    regionsWithEvents\n  )\n  return visibileEvents\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  regions: getSelectedRegions(state),\n  events: getVisibleEvents(timelineEvents, getSelectedRegions(state)),\n})\nconst connector = connect(mapStateToProps, {})\n\nexport default connector(Timeline)\n","import { Flex, FlexBreakpoints, FlexItem, FlexModifiers } from \"@patternfly/react-core\";\nimport \"@patternfly/react-core/dist/styles/base.css\";\nimport React from \"react\";\nimport \"./App.css\";\nimport EntityPicker from \"./Entity/EntityPicker\";\nimport RegionPicker from \"./Region/RegionPicker\";\nimport TagPicker from \"./Tag/TagPicker\";\nimport VisibleEvents from './Timeline/VisibleEvents';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Flex\n        breakpointMods={[\n          { modifier: FlexModifiers[\"column\"] },\n          { modifier: FlexModifiers[\"row\"], breakpoint: FlexBreakpoints.lg },\n        ]}\n      >\n        <Flex\n          breakpointMods={[\n            { modifier: FlexModifiers[\"flex-4\"] },\n            { modifier: FlexModifiers.column },\n          ]}\n        >\n          <FlexItem>\n            <h2>Timeline</h2>\n            <VisibleEvents />\n          </FlexItem>\n        </Flex>\n        <Flex\n          breakpointMods={[\n            { modifier: \"column\" },\n            { modifier: FlexModifiers[\"flex-1\"] },\n          ]}\n          className=\"form\"\n        >\n          <FlexItem>\n            <h2>Selection</h2>\n          </FlexItem>\n          <FlexItem>\n            <RegionPicker />\n          </FlexItem>\n          <FlexItem>\n            <TagPicker />\n          </FlexItem>\n          <FlexItem>\n            <EntityPicker />\n          </FlexItem>\n        </Flex>\n      </Flex>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}